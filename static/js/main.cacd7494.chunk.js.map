{"version":3,"sources":["api/axios.js","api/getAuthHeader.js","api/auth.js","components/loginpage/index.js","api/contests.js","api/error.js","components/searchbox/index.js","components/dashboard/index.js","components/auth/index.js","components/divisionbox/index.js","components/problemlist/index.js","components/timer/index.js","components/submissions/index.js","components/sidebar/index.js","components/divisions/index.js","components/contestdetails/index.js","components/problemstatement/index.js","api/code.js","components/modal/index.js","components/problem/index.js","App.js","serviceWorker.js","index.js"],"names":["instance","axios","create","baseURL","timeout","headers","a","store","get","token","Authorization","getCurrentUser","getAuthHeader","accesstoken","data","console","error","login","authcode","client_id","client_secret","redirect_uri","post","response","success","loginone","window","location","href","LoginPage","startLogin","className","onClick","getContests","getContestDetails","id","getSubmissions","getProblem","pid","getSubmissionsForProblem","ifreqfailed","alert","SearchBox","props","componentDidMount","log","user","contests","setState","result","content","contestList","onChangeRadioButton","changeEvent","selectedOption","target","value","state","index","selected","isInvalid","isValid","validationState","this","selop","length","isMatch","FormGroup","InputGroup","Prepend","labelKey","onChange","s","options","map","ele","placeholder","Append","Button","variant","contest","filter","history","push","code","Form","Group","style","textAlign","Check","paddingTop","checked","type","label","React","Component","Dashboard","display","alignItems","justifyContent","Jumbotron","marginTop","maxWidth","getParameterByName","name","url","replace","results","RegExp","exec","decodeURIComponent","Auth","set","access_token","refresh_token","moment","authUser","divstyle","width","height","borderRadius","padding","border","cursor","Card","Img","alt","src","details","bannerFile","Header","Body","divClick","Title","Text","ProblemList","onProblemClick","contestCode","problemCode","problems","sproblems","sort","b","successfulSubmissions","fontSize","Table","striped","bordered","hover","size","i","accuracy","toPrecision","Countdown","days","undefined","hours","minutes","seconds","interval","setInterval","timeTillDate","then","timeFormat","now","countdown","subtract","format","clearInterval","subs","username","startd","startDate","endd","endDate","currentd","onGoing","hasStarted","timerprops","Container","marginBottom","Row","submissions","Col","xs","lg","span","offset","Subtitle","isParent","onDivClick","problemsList","ContestDetails","onPageRender","match","params","children","freezingTime","announcements","background","MarkdownRender","newProps","plugins","RemarkMathPlugin","renderers","math","Node","formula","inlineMath","inline","Provider","input","escapeHtml","submitCode","bodydata","getStatus","poll","para","ms","output","cmpinfo","wait","Promise","resolve","setTimeout","SubModal","setShow","val","show","langs","handleSelectChange","e","language","handleCodeChange","handleInputChange","handleRunCode","sourceCode","isLoading","link","statusresult","handleClose","Modal","onHide","animation","aria-labelledby","centered","closeButton","controlId","Control","as","Label","Footer","Spinner","role","aria-hidden","Problem","problemid","problem","body","problemName","source","languagesSupported","App","renderlogin","isLoggedIn","position","left","top","color","to","path","exact","render","component","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.cacd7494.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.codechef.com',\n  timeout: 5000,\n  headers: {}\n});\n\nexport default instance;","import store from 'store2';\n\nexport default async () => {\n  const token = await store.get('authToken');\n  if(token){\n    return {\n      Authorization: `Bearer ${token}`\n    }\n  }else{\n    return null;\n  }\n  };\n","import axios from './axios';\nimport getAuthHeader from './getAuthHeader';\n// const client_secret =  'b2503a44eafe436b30a9e3fb00b10aaa'\nexport const getCurrentUser = async () => {\n  try {\n    const accesstoken = await getAuthHeader();\n    const data = { headers: accesstoken };\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const login = async ({authcode,client_id,client_secret,redirect_uri}) => {\n  try {\n    const response = await axios.post(\n      \"oauth/token\",\n      {\"grant_type\": \"authorization_code\",\n      \"code\": authcode,\n      \"client_id\":client_id,\n      \"client_secret\":client_secret,\n      \"redirect_uri\":redirect_uri},\n    );\n    return { success: true,response };\n  } catch (error) {\n    return error;\n  }\n};\n","import React from \"react\";\nimport axios from 'axios';\nimport \"./index.css\";\nimport {login} from '../../api/auth';\nconst client_id =  '83c9543d85c56057657533b11640f5e3'\nconst url = \"https://api.codechef.com/oauth/authorize?response_type=code&client_id=\"+client_id+\"&state=xyz&redirect_uri=https://sunburn21.github.io//auth\";\nconst loginone = ()=>{\n  window.location.href=url; \n  return false;\n}\n\nconst LoginPage = ({ startLogin }) => (\n  <div className=\"box-layout\">\n    <div className=\"box-layout__box\">\n      <h1 className=\"box-layout__title\">ContestChef</h1>\n      <p>Companion to your CodeChef</p>\n      {/* <button className=\"box-layout__button\" onClick={startLogin}> */}\n      {/* <a href=\"yourLink\"  target=\"popup\"  onclick=\"window.open('yourLink','popup','width=600,height=600,scrollbars=no,resizable=no'); return false;\"></a> */}\n      <button className=\"box-layout__button\" onClick={loginone} >\n        Login with Codechef.\n      </button>\n    </div>\n  </div>\n);\n\nexport default LoginPage;","import axios from './axios';\n\nexport const getContests = async ({headers}) => {\n    try {\n      const { data } = await axios.get(\n        `/contests`,{\n            headers: headers\n        } \n      );\n      return data;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\nexport const getContestDetails = async ({headers,id}) => {\n    try {\n        const { data } = await axios.get(\n          `/contests/${id}`,{\n              headers: headers\n          } \n        );\n        return data;\n      } catch (error) {\n        console.error(error);\n      }\n}\n\nexport const getSubmissions = async ({headers,id}) =>{\n    try {\n        const { data } = await axios.get(\n          `/submissions/?contestCode=${id}`,{\n              headers: headers\n          } \n        );\n        return data;\n      } catch (error) {\n        console.error(error);\n      }\n}\n\nexport const getProblem = async ({headers,id,pid}) =>{\n  try {\n      const { data } = await axios.get(\n        `/contests/${id}/problems/${pid}`,{\n            headers: headers\n        } \n      );\n      return data;\n    } catch (error) {\n      console.error(error);\n    }\n}\n\nexport const getSubmissionsForProblem = async ({headers,id,pid}) =>{\n  try {\n      const { data } = await axios.get(\n        `/submissions/?contestCode=${id}&problemCode=${pid}`,{\n            headers: headers\n        } \n      );\n      return data;\n    } catch (error) {\n      console.error(error);\n    }\n}\n","export const ifreqfailed = (data)=>{\n    if(!data){\n        alert('Error in fetching data! Try Again! Check your connection or Login again.');\n        return true;\n      }\n    return false;\n}\n\n","import React,{Component,Fragment} from 'react';\nimport {InputGroup,FormGroup,Button,FormControl,Form} from 'react-bootstrap' ;\nimport {Typeahead} from 'react-bootstrap-typeahead';\nimport './index.css';\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\nimport {getContests} from '../../api/contests';\nimport {ifreqfailed} from '../../api/error';\nconst getInitialState = () => ({\n    index: 0,\n    selected: [],\n  });\n  \n  class SearchBox extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            index: 0,\n            selected: [],\n            contests:[],\n            selectedOption:'code'\n        };\n      }\n    \n\n    componentDidMount = async ()=>{\n        console.log(this.props.user);\n        const contests = await getContests(this.props.user);\n        if(ifreqfailed(contests)){\n          return;\n        }\n        if(!contests){\n          alert('Error in fetching contest! Try Again! Check your connection or Login again.');\n          return;\n        }\n        await this.setState({contests:contests.result.data.content.contestList})\n    }\n    \n    onChangeRadioButton = (changeEvent)=>{\n        this.setState({selectedOption:changeEvent.target.value})\n    }\n\n    render() {\n      const { index, selected,contests,selectedOption:selop } = this.state;\n      const state = contests[index];\n      let isInvalid;\n      let isValid;\n      let validationState;\n  \n      if (selected.length) {\n        const isMatch = selected[0][`${selop}`] === state[`${selop}`];\n  \n        // BS4 validation\n        isInvalid = !isMatch;\n        isValid = isMatch;\n  \n        // BS3 validation\n        validationState = isMatch ? 'success' : 'error';\n      }\n  \n      return (\n        <Fragment>\n          <FormGroup validationState={validationState}>\n            <InputGroup>\n              <InputGroup.Prepend className=\"input-group-prepend\">\n                <span className=\"input-group-text\">\n                  Enter the contest\n                </span>\n              </InputGroup.Prepend>\n              <Typeahead\n                id=\"form-example\"\n                isInvalid={isInvalid}\n                isValid={isValid}\n                labelKey=\"capital\"\n                onChange={(s) => this.setState({ selected: s },()=>{console.log(this.state.selected)})}\n                options={this.state.contests.map((ele)=>(ele[selop]))}\n                placeholder=\"Select a capital...\"\n                selected={selected}\n              />\n              <InputGroup.Append className=\"input-group-append\">\n                <Button\n                  variant=\"outline-secondary\"\n                  onClick={() => {\n                      const contest = this.state.contests.filter((ele)=>{\n                        return ele[selop]===selected[0];\n                      })\n                      console.log(contest[0]);\n                      this.props.history.push(`/contest/${contest[0].code}`)\n                  }}>\n                  Submit\n                </Button>\n              </InputGroup.Append>\n            </InputGroup>\n            <Form.Group style={{textAlign:'left'}}>\n            <Form.Check style={{paddingTop:\"5px\"}} value='code' checked={this.state.selectedOption==='code'} onChange={this.onChangeRadioButton} type=\"radio\" label=\"Search by code\" />\n            <Form.Check type=\"radio\" value='name' checked={this.state.selectedOption==='name'} onChange={this.onChangeRadioButton} label=\"Search by name\" />\n            </Form.Group>\n          </FormGroup>\n        </Fragment>\n      );\n    }\n  }\n\n  export default SearchBox;","import React,{Component} from \"react\";\nimport SearchBox from '../searchbox';\nimport {Jumbotron,Button} from 'react-bootstrap' \n\nimport \"./index.css\";\nclass Dashboard extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      contests:{}\n    };\n  }\n  render(){\n    return(\n      <div className=\"dashboard_container\" style={{display:'flex',alignItems:'center',justifyContent:'center'}}>\n         <Jumbotron >\n           <div style={{marginTop:'-100px'}}>\n           <h1>ContestChef</h1>\n            <p>\n              A minimalistic Codechef companion app.\n            </p>\n            {/* <p>\n              <Button variant=\"primary\">Learn more</Button>\n            </p> */}\n            <div style={{maxWidth:\"500px\"}}>\n            <SearchBox user={this.props.user} history={this.props.history}/>\n            </div>\n           </div>\n            \n          </Jumbotron>\n      </div>\n    )\n  }\n}\n\nexport default Dashboard;","import store from 'store2';\nimport React, { Component } from 'react';\nimport {login} from '../../api/auth';\nimport moment from 'moment';\nconst getParameterByName = (name, url)=> {\n  if (!url) url = window.location.href;\n  name = name.replace(/[\\[\\]]/g, '\\\\$&');\n  var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n      results = regex.exec(url);\n  if (!results) return null;\n  if (!results[2]) return '';\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n}\nconst client_secret = \"50cdc33cc501f6ef3a149c56ad92ffeb\";\nconst redirect_uri  = \"https://sunburn21.github.io/auth\";\nconst client_id = '83c9543d85c56057657533b11640f5e3';\nclass Auth extends Component {\n  componentDidMount = async () => {\n    const authcode = await getParameterByName('code');   \n      const result = await login({authcode,client_secret,client_id,redirect_uri});\n        if(result.success){\n          await store.set('authToken', result.response.data.result.data.access_token);\n          await store.set('refauthToken', result.response.data.result.data.refresh_token); \n          await store.set('tokentime',moment());\n          console.log(result.response.data.result.data);         \n          await this.props.data.authUser();\n        }\n          if(!this.props.data.state.user) this.props.history.push('/login');\n          this.props.history.push('/home');    \n  };\n\n  render() {\n    return null;\n  }\n}\n\nexport default (data) => (props) =>\n  <Auth data={data} {...props} />;\n","import React,{Fragment} from 'react';\nimport {Card} from 'react-bootstrap';\n\nconst divstyle = {width:'250px',height:'100px',\n                borderRadius:'5px',textAlign:'left',padding:'10px',\n                border:'2px solid #e9ecef',cursor:'pointer'};\n\nexport default (props)=>{\n    return(\n        <Fragment>\n            <Card.Img variant=\"top\" alt=\"\" src={props.details.bannerFile} />\n                            <Card style={{marginTop:'20px'}} className=\"text-center\">\n                                <Card.Header>Divisions</Card.Header>\n                                <Card.Body>\n                                    <div style={{display:'flex',justifyContent:'space-around'}}>\n                                        <span onClick={()=>{\n                                            props.divClick(0)\n                                        }} className='division' style={divstyle}>\n                                        <Card.Title>Division 1</Card.Title>\n                                        <Card.Text>If user's rating is >=1100</Card.Text>\n                                        </span>\n                                        <span onClick={()=>{\n                                            props.divClick(1)\n                                        }} className='division' style={divstyle}>\n                                        <Card.Title>Division 2</Card.Title>\n                                        <Card.Text>If user's rating is {'<='}1099 </Card.Text>\n                                        </span>\n                                    </div>\n                                </Card.Body>\n                                {/* <Card.Footer className=\"text-muted\">2 days ago</Card.Footer> */}\n                            </Card>\n        </Fragment>\n    )\n}","import React, { Component } from 'react';\nimport {Table} from 'react-bootstrap';\n\nimport './index.css';\n\nclass ProblemList extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n  onProblemClick = (ele)=>{\n    this.props.history.push(`/problem/${ele.contestCode}/${ele.problemCode}`);\n  }\n  render(){\n    const {problems} = this.props;\n    console.log(problems);\n    const sproblems = [...problems].sort((a,b)=>(-a.successfulSubmissions+b.successfulSubmissions));\n    return (\n        <div style={{marginTop:'30px'}}>\n            <div style={{fontSize:'20px'}}>Problems</div>\n            <Table striped bordered hover size=\"sm\">\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>Code</th>\n                <th>Submissions</th>\n                <th>Accuracy</th>\n              </tr>\n            </thead>\n            <tbody>\n                {sproblems.map((ele,i)=>(\n                  <tr className='problem_item' style={{fontSize:'15px',cursor:'pointer'}} onClick={()=>(this.onProblemClick(ele))}>\n                      <td>{i+1}</td>\n                      <td>{ele.problemCode}</td>\n                      <td>{ele.successfulSubmissions}</td>\n                      <td>{ele.accuracy.toPrecision(3)}</td>\n                  </tr> \n                ))}\n            </tbody>\n          </Table>\n        </div>\n    )\n\n  }\n    \n}\n\nexport default ProblemList;","import React from 'react';\nimport moment from 'moment';\nimport './index.css';\n\nclass Countdown extends React.Component {\n    state = {\n        days: undefined,\n        hours: undefined,\n        minutes: undefined,\n        seconds: undefined\n    };\n    componentDidMount() {\n        this.interval = setInterval(() => {\n            const { timeTillDate, timeFormat } = this.props.data;\n            const then = moment(timeTillDate);\n            const now = moment();\n            const countdown = moment(then - now);\n            countdown.subtract(1,'days');\n            countdown.subtract(5.5,'hours');\n\n            const days = countdown.format('D');\n            const hours = countdown.format('HH');\n            const minutes = countdown.format('mm');\n            const seconds = countdown.format('ss');\n            this.setState({ days, hours, minutes, seconds });\n        }, 1000);\n    }\n    componentWillUnmount() {\n        if (this.interval) {\n            clearInterval(this.interval);\n        }\n    }\n    render(){\n        \n        const { days, hours, minutes, seconds } = this.state;\n\n        return(\n            <div>\n                <div className=\"countdown-wrapper\">\n                    <span className=\"countdown-item\">\n                        {days}\n                        <span>days</span>\n                    </span>\n                    <span className=\"countdown-item\">\n                        {hours}\n                        <span>hrs</span>\n                    </span>\n                    <span className=\"countdown-item\">\n                        {minutes}\n                        <span>min</span>\n                    </span>\n                    <span className=\"countdown-item\">\n                        {seconds}\n                        <span>sec</span>\n                    </span>\n                </div>\n            </div>\n        )\n    }\n    \n}\n\nexport default Countdown","import React from 'react';\nimport {Card,ListGroup,Table} from 'react-bootstrap';\n\nexport default (props)=>{\n    return (\n        <div style={{marginTop:'2'}}>\n            <Card style={{ width: '100%' }}>\n            <Card.Header>Submissions</Card.Header>\n            <Table striped bordered hover size=\"sm\" style={{fontSize:'15px'}}>\n  <thead >\n    <tr >\n      <th>@</th>\n      <th>#</th>\n      <th>Result</th>\n    </tr>\n  </thead>\n  <tbody>\n      {props.subs.map((ele)=>(\n          <tr style={{fontSize:'10px'}}>\n            <td>{ele.username}</td>\n            <td>{ele.problemCode}</td>\n            <td>{ele.result}</td>\n        </tr>\n      ))}\n  </tbody>\n</Table>\n            </Card>\n        </div>\n    )\n}","import React,{Fragment} from 'react';\nimport {Card,Row,Col,Container} from 'react-bootstrap';\nimport moment from 'moment';\nimport Timer from '../timer';\nimport Submissions from '../submissions';\n\n\n\nexport default (props)=>{\n    const timeFormat = 'MM DD YYYY, h:mm a';\n    const startd = moment(props.details.startDate);\n    const endd = moment(props.details.endDate);\n    const currentd = moment();\n    const onGoing = (startd<=currentd && currentd<endd);\n    const hasStarted = (startd<=currentd);\n    const timeTillDate=onGoing?endd:startd;\n    // const countdown = moment(timeTillDate-currentd);\n    const timerprops = {\n        startd,endd,onGoing,hasStarted,timeTillDate,timeFormat\n    }\n    return (\n        <Fragment>\n            <Card className='text-center' style={{ width: '1',height:'100vh' }}>\n                        <Card.Body>\n                            <Card.Title>Timer</Card.Title>\n                            <Container className='text-center' >\n                                <div style={{display:'flex',justifyContent:'center',marginBottom:'20px'}}>\n                                    <Row className=''>\n                                    {onGoing?<Timer data={timerprops}/>:(!hasStarted?<Timer data={timerprops}/>:\"Contest has ended.\")}\n                                    </Row>\n                                </div>\n                                <div style={{display:'flex',justifyContent:'center'}}>\n                                    <Row className=''>\n                                    <   Submissions subs={props.details.submissions} />\n                                    </Row>  \n                                </div>\n                            </Container>\n                        </Card.Body>\n                    </Card>\n        </Fragment>\n    )\n}","import React from 'react';\nimport './index.css';\nimport {Row,Col,Container,Card,Button} from 'react-bootstrap';\nimport DivisionBox from '../divisionbox';\nimport ProblemsList from '../problemlist';\nimport SideBar from '../sidebar';\n// const divstyle = {width:'250px',height:'100px',\n//                 borderRadius:'5px',textAlign:'left',padding:'10px',\n//                 border:'2px solid #e9ecef',cursor:'pointer'};\n\nexport default (props)=>{\n    return(\n        <div>\n            <Container>\n            <Row style={{height:'100vh'}}>\n                <Col xs lg={{span:7,offset:1}}>\n                    <Card style={{ width: '1',height:'100vh' }}>\n                        <Card.Body>\n                            <Card.Title>{props.details.name}</Card.Title>\n                            <Card.Subtitle className=\"mb-2 text-muted\">{props.details.code}</Card.Subtitle>\n                            {props.isParent?<DivisionBox divClick={props.onDivClick} details={props.details} />:<ProblemsList history={props.history} problems={props.details.problemsList}/>}\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col  xs lg={3}>\n                <SideBar details={props.details}/>\n                </Col>\n            </Row>\n            </Container>\n        </div>\n    )\n} \n\n\n\n\n\n","import React,{Component} from 'react';\nimport {getContestDetails,getSubmissions} from '../../api/contests';\nimport Divisions from '../divisions';\nimport {ifreqfailed} from '../../api/error';\nclass ContestDetails extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            code: \"\",\n            name: \"\",\n            startDate: \"\",\n            endDate: \"\",\n            isParent: false,\n            children: [],\n            bannerFile: \"\",\n            freezingTime: 0,\n            announcements: \"\",\n            problemsList:[],\n            submissions: []\n        };\n      }\n    componentDidMount = async ()=>{\n        console.log(this.props.user);\n        this.onPageRender(this.props.match.params.id);\n    }\n\n    onPageRender= async (id)=>{\n        const contests = await getContestDetails({headers:this.props.user.headers,id:id});\n        if(ifreqfailed(contests)){\n            return;\n        }\n        await this.setState({...contests.result.data.content});\n        const submissions = await getSubmissions({headers:this.props.user.headers,id:id});\n        if(ifreqfailed(contests)){\n            return;\n        }\n        console.log(submissions);   \n        if(submissions.result){\n            await this.setState({submissions:submissions.result.data.content},()=>{\n                console.log(this.state.submissions);\n            })\n        }else{\n            await this.setState({submissions:[]},()=>{\n                console.log(this.state.submissions);\n            })\n        }\n    }\n\n    onDivClick = (a)=>{\n        this.onPageRender(this.state.children[a]);\n        this.props.history.push(`/contest/${this.state.children[a]}`);\n    }\n    \n    render() {\n        return (\n            <div style={{background:'#e9ecef',height:'100vh',width:'100vw'}}>\n                <Divisions onDivClick={this.onDivClick} details={this.state} history={this.props.history} isParent={this.state.isParent} />\n            </div>\n        )\n    }\n\n}\n\nexport default ContestDetails;","import React, { Component, createRef } from 'react';\nimport ReactMarkdown from 'react-markdown/with-html';\nimport MathJax from 'react-mathjax';\nimport RemarkMathPlugin from 'remark-math';\nimport './index.css';\nconst tex = `f(x) = \\\\int_{-\\\\infty}^\\\\infty\\\\hat f(\\\\xi)\\\\,e^{2 \\\\pi i \\\\xi x}\\\\,d\\\\xi`\n\n\nfunction MarkdownRender(props) {\n    const newProps = {\n        ...props,\n        plugins: [\n          RemarkMathPlugin,\n        ],\n        renderers: {\n          ...props.renderers,\n          math: (props) => \n            <MathJax.Node formula={props.value} />,\n          inlineMath: (props) =>\n            <MathJax.Node inline formula={props.value} />\n        }\n      };\n      console.log(props.value);\n      return (\n        <MathJax.Provider className='for_fontsize'  style={{fontSize:'15px'}} input=\"latex\">\n            <ReactMarkdown className='for_fontsize'  style={{fontSize:'15px'}}  escapeHtml={false} {...newProps} />\n        </MathJax.Provider>\n      );\n}\n\nexport default MarkdownRender\n\n// class ProblemStatement extends Component{\n//     constructor(props){\n//         super(props);\n//         this.node = createRef();\n//     }\n//     componentDidMount(){\n//         console.log(window.MathJax);\n//         this.renderMath();\n//     }\n//     componentDidUpdate(){\n//         this.renderMath();\n//     }\n//     renderMath(){\n//         window.MathJax.Hub.Queue([\"Typeset\",window.MathJax.Hub,this.node.current]);\n//     }\n//     render(){\n//         return(\n//         <div ref={this.node}>{this.props.children}</div>\n//         )\n//     }\n// }\n\n// export default ProblemStatement;","import axios from './axios';\n\nexport const submitCode = async ({headers,bodydata}) => {\n    console.log(bodydata);\n    try {\n        const { data } = await axios.post(\n            `/ide/run`,{...bodydata},{headers:{...headers,\"Accept\": \"application/json\",\"Content-Type\": \"application/json\"}} \n        );\n        return data;\n    } catch (error) {\n      console.error(error); \n    }\n}\n\nexport const getStatus = async ({headers,id}) =>{\n    try {\n        const { data } = await axios.get(\n          `/ide/status?link=${id}`,{\n              headers: {...headers,\"Accept\": \"application/json\"}\n          } \n        );\n        return data;\n      } catch (error) {\n        console.error(error);\n      }\n  }\n  export const poll = async (para, ms)=> {\n    let result = await getStatus(para);\n    console.log(result);\n    if(!result) return null;\n    while (!result.result.data.output && !result.result.data.cmpinfo) {\n      await wait(ms);\n      result = await getStatus(para);\n      if(!result) return null;\n    }\n    return result;\n  }\n  \n  function wait(ms = 3000) {\n    return new Promise(resolve => {\n      console.log(`waiting ${ms} ms...`);\n      setTimeout(resolve, ms);\n    });\n  }","import React,{Component} from 'react';\nimport 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.js';\nimport {Button,Modal,Form,Container,Row,Col,Spinner} from 'react-bootstrap';\nimport './index.css'\nimport {submitCode,getStatus,poll} from '../../api/code';\n\nclass SubModal extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            show:false,\n            langs:[],\n            code:``,\n            input:``,\n            output:``,\n            language:``,\n            cmpinfo:``,\n            isLoading : false\n        };\n      }\n    // componentDidMount(){\n    //     this.setState({languages:this.props.languages},()=>{\n    //         console.log({lang:this.state.languages});\n    //     }); \n    // }\n    setShow = (val)=>{\n        this.setState({show:val,langs:this.props.langs}); \n    }\n    handleSelectChange = (e)=>{\n      this.setState({language:e.target.value})\n    }\n    handleCodeChange = (e)=>{\n      this.setState({code:e.target.value});\n    }\n    handleInputChange = (e)=>{\n      this.setState({input:e.target.value},()=>{\n      });\n    }\n    handleRunCode = async ()=>{\n      this.setState({output:\"\"});\n      const bodydata = {\n        sourceCode: this.state.code,\n        language:this.state.language,\n        input:this.state.input\n      }\n      if(bodydata.language==='Language' || bodydata.language==\"\"){\n        alert('Select language');\n        return;\n      }\n      if(!bodydata.sourceCode){\n        alert('Enter code');\n        return;\n      }\n      await this.setState({isLoading:true})\n      const result = await submitCode({headers:this.props.headers,bodydata});\n      if(!result){\n        alert('Error Occurred! Try Submitting Again.');\n        this.setState({isLoading:false});\n        return;\n      }\n      console.log({result});\n      const {data} = result.result;\n      // console.log(data.link);\n      const statusresult = await poll({headers:this.props.headers,id:data.link});\n      if(!statusresult){\n        alert('Error Occurred! Try Submitting Again.');\n        this.setState({isLoading:false});\n        return;\n      }else{\n        this.setState({output:statusresult.result.data.output,cmpinfo:statusresult.result.data.cmpinfo,isLoading:false});\n        console.log(statusresult.result.data.output);\n\n      }\n    }\n    render(){\n        const {show}=this.state;\n        const handleClose = () => this.setShow(false);\n        const handleShow = () => this.setShow(true);\n        \n        return (\n          <div>\n            <Button variant=\"secondary\" onClick={handleShow}>\n              Test/Submit\n            </Button>\n      \n            <Modal show={show} onHide={handleClose} animation={true} size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered>\n              <Modal.Header closeButton>\n              <Modal.Title id=\"contained-modal-title-vcenter\">\n                <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                  <Form.Control onChange={this.handleSelectChange} style={{padding:'0'}} as=\"select\">\n                  <option>Language</option>\n                    {this.state.langs.map((ele)=>(<option>{ele}</option>))}\n                  </Form.Control>\n                </Form.Group>\n              </Modal.Title>\n              \n              </Modal.Header>\n              <Modal.Body>\n                <Form>\n\n                <Form.Row className=\"show-grid\">\n                  <Col>\n                  <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                    <Form.Label>Your Code</Form.Label>\n                    <Form.Control onChange={this.handleCodeChange} style={{height:'298px'}} as=\"textarea\" xs={6} />\n                  </Form.Group>\n                  </Col>\n                  <Col>\n                  <Form.Row className=\"center\">\n                  <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                    <Form.Label>Input</Form.Label>\n                    <Form.Control onChange={this.handleInputChange}  style={{height:'125px'}} xs={6} as=\"textarea\"  />\n                  </Form.Group>\n                  </Form.Row>\n                  <Form.Row className=\"show-grid\">\n                  <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                    <Form.Label>Output</Form.Label>\n                    <Form.Control value={this.state.output+this.state.cmpinfo} style={{height:'125px'}} xs={6} as=\"textarea\"  />\n                  </Form.Group>\n                  </Form.Row>\n                  </Col>\n                </Form.Row>\n                </Form>\n              </Modal.Body>\n              <Modal.Footer>\n                <Button variant=\"secondary\" onClick={this.handleRunCode}>\n                  {this.state.isLoading?(<><Spinner\n                              as=\"span\"\n                              animation=\"border\"\n                              size=\"sm\"\n                              role=\"status\"\n                              aria-hidden=\"true\"\n                            />\n    <span className=\"sr-only\">Loading...</span></>):'Run'}\n                </Button>\n                <Button variant=\"primary\" onClick={handleClose}>\n                  Submit\n                </Button>\n              </Modal.Footer>\n            </Modal>\n          </div>\n        );\n    }\n    \n  }\n  \nexport default SubModal;","import React,{Component} from 'react';\nimport {Row,Col,Container,Card,Button} from 'react-bootstrap';\nimport MarkdownRender from '../problemstatement';\nimport SubModal from '../modal';\nimport {getSubmissionsForProblem} from '../../api/contests';\nimport SideBar from '../sidebar';\nimport {getProblem} from '../../api/contests';\nimport {ifreqfailed} from '../../api/error';\nimport './index.css';\n\nclass Problem extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            submissions:[]\n        };\n      }\n      componentDidMount = async ()=>{\n        const problem = await getProblem({id:this.props.match.params.id,pid:this.props.match.params.problemid,headers:this.props.user.headers});\n        if(ifreqfailed(problem)){\n            return;\n        }\n        const submissions = await getSubmissionsForProblem({id:this.props.match.params.id,pid:this.props.match.params.problemid,headers:this.props.user.headers});\n        if(ifreqfailed(submissions)){\n            return;\n        }\n        console.log(problem.result.data.content);\n        await this.setState({...problem.result.data.content,submissions:submissions.result.data.content})\n        // await this.setState({body:this.state.body.replace(\"```\",\" \").replace(\"###\",\"\\n###\")},()=>{\n        //     console.log(this.state.body);\n        // });\n        await this.setState({body:this.state.body.replace(/###/gi,\"\\n###\").replace(/`/gi,\"\")});\n      }\n    render(){\n        return(\n            <div style={{background:'#e9ecef'}}>\n                <Container>\n            <Row style={{}}>\n                <Col xs lg={{span:7,offset:1}}>\n                    <Card style={{ width: '1' }}>\n                        <Card.Body>\n                            <Card.Title>{this.state.problemName}</Card.Title>\n                            <Card.Subtitle className=\"mb-2 text-muted\">{this.state.problemCode}</Card.Subtitle>\n                            <div className='statement_wrapper' style={{fontSize:'15px'}}>\n                                <MarkdownRender source={this.state.body} />\n                            </div>\n                            <SubModal headers={this.props.user.headers} langs={this.state.languagesSupported}/>\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col  xs lg={3}>\n                <SideBar details={this.state}/>\n                </Col>\n            </Row>\n            </Container>\n            </div>\n\n\n        )\n    }\n}\n\nexport default Problem;\n","import React,{Component} from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,Link\n} from 'react-router-dom';\nimport {getCurrentUser} from './api/auth';\nimport LoginPage from './components/loginpage';\nimport Home from './components/dashboard';\nimport Auth from './components/auth'\nimport ContestDetails from './components/contestdetails';\nimport ProblemPage from './components/problem';\nimport './App.css';\nimport { IoIosHome } from \"react-icons/io\";\nimport {FaSignInAlt} from 'react-icons/fa';\nclass App extends Component{\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: undefined,\n      renderlogin:true\n    };\n  }\n\n  componentDidMount = () => {\n      this.authUser();\n  };\n\n  authUser = async () => {\n    const result = await getCurrentUser();\n    if (result && result.headers) {\n      this.setState({ user: result,renderlogin:false })\n    } else {\n      this.setState({ user: undefined });\n    }\n  };\n\n  render(){\n    const isLoggedIn = !!this.state.user;\n    return (\n      <Router>\n      <div className=\"App\">\n        <div style={{position:\"fixed\",left:'0',top:'0',fontSize:'30px',display:'flex',width:'150px',justifyContent:'space-around'}}> \n        <Link style={{color:'#333333'}} to='/home'> <IoIosHome/></Link>\n        <Link style={{color:'#333333'}} to='/login'><FaSignInAlt/><span style={{fontSize:'18px'}}>Login</span> </Link>\n        </div>\n        <Switch>\n          <Route path='/home' exact  render={(props)=>isLoggedIn?<Home {...props} user = {this.state.user} />:<LoginPage {...props} />}/>;\n          <Route path='/login' exact component={LoginPage}/>;\n          {isLoggedIn?null:<Route path=\"/auth\" exact component={Auth({authUser:this.authUser,state:this.state})} />}\n          <Route path='/contest/:id' render={(props)=>isLoggedIn?<ContestDetails {...props} user = {this.state.user} />:<LoginPage {...props}  />}/>\n          <Route path='/problem/:id/:problemid' render={(props)=>isLoggedIn?<ProblemPage {...props} user = {this.state.user} />:<LoginPage {...props}  />}/>\n\n        </Switch>\n      </div>\n      </Router>\n      \n    );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}